version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_HOST: ${DATABASE_HOST}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  redis:
    image: redis:6  
    networks:
      - mynetwork

  web:
    build: .
    command: >
      sh -c "python3 manage.py migrate && python3 manage.py collectstatic --noinput && python3 manage.py runserver 0.0.0.0:8000"
    environment:
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABSE_PORT}
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    networks:
      - mynetwork

  celery:
    build: .
    command: celery -A Inventory worker -l info
    environment:
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes: 
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - mynetwork

  celery-beat:
    build: .
    command: celery -A Inventory beat -l info
    environment:
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  postgres_data:
